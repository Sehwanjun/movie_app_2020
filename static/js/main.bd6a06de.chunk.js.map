{"version":3,"sources":["Movie.js","App.js","index.js"],"names":["Movie","id","year","title","summary","poster","genres","className","src","alt","map","genre","index","key","slice","App","state","isLoading","movies","getMovies","a","axios","get","data","setState","this","movie","medium_cover_image","React","Component","ReactDOM","render","document","getElementById"],"mappings":"0TAwCeA,MAlCf,YAA6D,EAA5CC,GAA6C,IAAzCC,EAAwC,EAAxCA,KAAMC,EAAkC,EAAlCA,MAAOC,EAA2B,EAA3BA,QAASC,EAAkB,EAAlBA,OAAQC,EAAU,EAAVA,OACjD,OACE,yBAAKC,UAAU,SACb,yBAAKC,IAAKH,EAAQI,IAAKN,EAAOA,MAAOA,IAErC,yBAAKI,UAAU,eACb,wBAAIA,UAAU,gBAAgBJ,GAC9B,wBAAII,UAAU,eAAeL,GAC7B,wBAAIK,UAAU,UACXD,EAAOI,KAAI,SAACC,EAAOC,GAAR,OACV,wBAAIC,IAAKD,EAAOL,UAAU,iBACvBI,OAKP,uBAAGJ,UAAU,kBAAkBH,EAAQU,MAAM,EAAG,KAAhD,UCqDOC,G,kNA/DbC,MAAQ,CACNC,WAAW,EACXC,OAAQ,I,EAGVC,U,sBAAY,8BAAAC,EAAA,sEAKAC,IAAMC,IACd,2DANQ,gBAGEJ,EAHF,EAERK,KACEA,KAAQL,OAKZ,EAAKM,SAAS,CACZN,SACAD,WAAW,IAVH,2C,kEAkBVQ,KAAKN,c,+BAOG,IAAD,EACuBM,KAAKT,MAA3BC,EADD,EACCA,UAAWC,EADZ,EACYA,OAGnB,OACE,6BAASX,UAAU,aAChBU,EACC,yBAAKV,UAAU,UACb,0BAAMA,UAAU,gBAAhB,eAGF,yBAAKA,UAAU,UACZW,EAAOR,KAAI,SAAAgB,GAAK,OACf,kBAAC,EAAD,CACEzB,GAAIyB,EAAMzB,GACVY,IAAKa,EAAMzB,GACXC,KAAMwB,EAAMxB,KACZC,MAAOuB,EAAMvB,MACbC,QAASsB,EAAMtB,QACfC,OAAQqB,EAAMC,mBACdrB,OAAQoB,EAAMpB,kB,GAnDZsB,IAAMC,YCPxBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.bd6a06de.chunk.js","sourcesContent":["// Movies.js\r\n\r\nimport React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./Movie.css\";\r\n\r\nfunction Movie({ id, year, title, summary, poster, genres }) {\r\n  return (\r\n    <div className=\"movie\">\r\n      <img src={poster} alt={title} title={title} />\r\n      {/* alt와 title을 사용하는 이유는 마우스를 올렸을때 제목이 뜨게하기 위해서 */}\r\n      <div className=\"movie__data\">\r\n        <h3 className=\"movie__title\">{title}</h3>\r\n        <h5 className=\"movie__year\">{year}</h5>\r\n        <ul className=\"genres\">\r\n          {genres.map((genre, index) => (\r\n            <li key={index} className=\"genres__genre\">\r\n              {genre}\r\n            </li>\r\n          ))}\r\n          {/* map은 또다른 인자를 주는데 그건 카운트넘버 개념이다, 인자이름은 아무거나 정해도 댐 */}\r\n        </ul>\r\n        <p className=\"movie__summary\">{summary.slice(0, 180)}...</p>\r\n        {/* 원래 {summary}라고만 했는데 summar가 너무 길어서 중간에 끊어줘야 함 */}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nMovie.propTypes = {\r\n  id: PropTypes.number.isRequired,\r\n  title: PropTypes.string.isRequired,\r\n  summary: PropTypes.string.isRequired,\r\n  poster: PropTypes.string.isRequired,\r\n  year: PropTypes.number.isRequired,\r\n  genres: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n};\r\n\r\n//이건 JSON에서 제공되는 프로퍼티들을 따온거임 */}\r\n\r\nexport default Movie;\r\n","// App.js\n// fetching하는 방법에 대한 것(그러나 axios가 더 좋은 방법)\n// 터미널에서 npm i axios 해서 일단 깔어(i는 인스톨의 약자)\n\nimport React from \"react\";\nimport axios from \"axios\";\nimport Movie from \"./Movie\";\nimport \"./App.css\";\n\n// YTS 홈페이지에서 API >\n\nclass App extends React.Component {\n  state = {\n    isLoading: true,\n    movies: [],\n  };\n\n  getMovies = async () => {\n    const {\n      data: {\n        data: { movies },\n      },\n    } = await axios.get(\n      \"http://yts-proxy.now.sh/list_movies.json?sort_by=rating\"\n    );\n    this.setState({\n      movies,\n      isLoading: false,\n    });\n  };\n\n  //movies를 콘솔로그 해보면 data폴더 > data폴더 > 영화들 객체가 있다.\n  //즉 movies.data.data.movies를 그걸 {data: {data:{movies}}}로 쓸 수 있다.\n\n  componentDidMount() {\n    this.getMovies();\n  }\n  //axios.get을 통해서 json문서에서 데이터를 잡아야 함 그래야 state에 사용할 수 있음\n  //하지만 axios는 좀 느리기에 mount될때까지 기다려야 함. 그래서 async를 넣을거야\n  //또다른 방법은 함수를 따로 만들어서 (getMovie) 넣어주는 것이다.\n  //이 함수가 비동기라고 한 거다. 이 말은 '너는 이걸 기다려야 해'라는 말임(await)\n\n  render() {\n    const { isLoading, movies } = this.state;\n    // 이걸 하게되면 아래 행<div>다음에 나오는 거에 this.state.isLoading이라고 안써도 됨\n    //위에서의 isLoading과는 별개로 생각한다음 보자.\n    return (\n      <section className=\"container\">\n        {isLoading ? (\n          <div className=\"loader\">\n            <span className=\"loader__text\">Loading...</span>\n          </div>\n        ) : (\n          <div className=\"movies\">\n            {movies.map(movie => (\n              <Movie\n                id={movie.id}\n                key={movie.id}\n                year={movie.year}\n                title={movie.title}\n                summary={movie.summary}\n                poster={movie.medium_cover_image}\n                genres={movie.genres}\n              />\n            ))}\n          </div>\n        )}\n\n        {/* 이건 리액트가 아니라 자바스크립트다 */}\n        {/* {isLoading ? \"Loading\" : } 이렇게 쓸 수 있다. 그러나 너무 길어 */}\n      </section>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}